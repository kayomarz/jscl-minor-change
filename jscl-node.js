#!/usr/bin/env node
(function(jscl){
'use strict';
(function(values, internals){
var l1=internals.make_lisp_string('loading repl-node/repl.lisp!');
console.log(internals.xstring(l1));
var l2=internals.intern('*RL*');
l2;
var l3=internals.intern('START-REPL');
var l4=internals.intern('WELCOME-MESSAGE');
var l5=internals.intern('*ROOT*');
var l6=internals.make_lisp_string('process');
var l7=internals.intern('NIL','COMMON-LISP');
var l8=internals.make_lisp_string('stdin');
var l9=internals.make_lisp_string('process');
var l10=internals.make_lisp_string('stdout');
var l11=internals.make_lisp_string('readline');
var l12=internals.make_lisp_string('createInterface');
var l13=internals.make_lisp_string('~a> ');
var l14=internals.intern('*PACKAGE*','COMMON-LISP');
var l15=internals.intern('PACKAGE-NAME','COMMON-LISP');
var l16=internals.intern('FORMAT','COMMON-LISP');
var l17=internals.make_lisp_string('setPrompt');
var l18=internals.make_lisp_string('prompt');
var l19=internals.make_lisp_string('line');
var l20=internals.make_lisp_string('message');
var l21=internals.intern('T','COMMON-LISP');
var l22=internals.make_lisp_string('ERROR[!]: ~a~%');
var l23=internals.intern('*HANDLER-BINDINGS*');
var l24=internals.intern('ERROR','COMMON-LISP');
var l25=internals.make_lisp_string('message');
var l26=internals.intern('%%ERROR');
var l27=internals.intern('LIST','COMMON-LISP');
var l28=internals.intern('READ-FROM-STRING','COMMON-LISP');
var l29=internals.intern('EVAL-INTERACTIVE');
var l30=internals.intern('PRINT','COMMON-LISP');
var l31=internals.make_lisp_string('ERROR: ');
var l32=internals.intern('!CONDITION-ARGS');
var l33=internals.intern('TERPRI','COMMON-LISP');
var l34=internals.make_lisp_string('~a> ');
var l35=internals.make_lisp_string('setPrompt');
var l36=internals.make_lisp_string('prompt');
var l37=internals.make_lisp_string('on');
l3.fvalue=(function(){var FUNC=(function JSCL_USER_STARTREPL(values){internals.checkArgsAtMost(arguments.length-1,0);
var v1=this;
return (function(){l4.fvalue(internals.pv);
l2.value=internals.js_to_lisp(internals.symbolValue(l5)[internals.xstring(l11)][internals.xstring(l12)](internals.lisp_to_js(internals.js_to_lisp((function(){var TMP=internals.symbolValue(l5)[internals.xstring(l6)];
if (TMP===undefined) return l7.value;
TMP=TMP[internals.xstring(l8)];
return TMP===undefined?l7.value:TMP;
})())),internals.lisp_to_js(internals.js_to_lisp((function(){var TMP=internals.symbolValue(l5)[internals.xstring(l9)];
if (TMP===undefined) return l7.value;
TMP=TMP[internals.xstring(l10)];
return TMP===undefined?l7.value:TMP;
})()))));
return (function(v3){return internals.bindSpecialBindings([l5],[v3],(function(){internals.js_to_lisp(internals.symbolValue(l5)[internals.xstring(l17)](internals.lisp_to_js(l16.fvalue(internals.pv,l7.value,l13,l15.fvalue(internals.pv,internals.symbolValue(l14))))));
internals.js_to_lisp(internals.symbolValue(l5)[internals.xstring(l18)]());
return internals.js_to_lisp(internals.symbolValue(l5)[internals.xstring(l37)](internals.lisp_to_js(l19),internals.lisp_to_js((function JSCL_USER_NIL(values,v27){internals.checkArgs(arguments.length-1,1);
var v28=this;
(function(){try{return (function(){try{var v32=[];
return (function(v33){return (function(){var v34=1;
var v35=[];
TBLOOP:while (true){try{switch(v34){case 1:(function(v36){return internals.bindSpecialBindings([l23],[v36],(function(){(function(){var v38=new internals.Cons(l24,(function JSCL_USER_NIL(values,v39){internals.checkArgs(arguments.length-1,1);
var v40=this;
v33=v39;
return (function(){throw new internals.TagNLX(v35,2);
})();
}));
var v41=new internals.Cons(v38,internals.symbolValue(l23));
return l23.value=v41;
})();
return (function(){try{return (function(){throw new internals.BlockNLX(v32,(function(v44){return (function(){return (function(v46,v47){(function(){while (v46!==l7.value){v47=internals.car(v46);
l30.fvalue(internals.pv,v47);
l7.value;
v46=internals.cdr(v46);
}return l7.value;
})();
return l7.value;
})(v44,l7.value);
})();
})((function(){var FUNC=internals.symbolFunction(l27);
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=l29.fvalue(values,l28.fvalue(internals.pv,v27));
if (typeof VS==='object'&&VS&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})()),'G139');
})();
}catch (v42){v42=internals.js_to_lisp(v42);
return (internals.isNLX(v42)?l21.value:l7.value)!==l7.value?(function(){throw v42;
})():l26.fvalue(internals.pv,(function(v43){return v43!==l7.value?v43:v42;
})(internals.js_to_lisp((function(){var TMP=v42[internals.xstring(l25)];
return TMP===undefined?l7.value:TMP;
})())));
}})();
}));
})(internals.symbolValue(l23));
case 2:(function(){throw new internals.BlockNLX(v32,(function(v48){l16.fvalue(internals.pv,l21.value,l31);
(function(){var F=internals.symbolFunction(l16);
var ARGS=[internals.pv,l21.value];
var TAIL=l32.fvalue(internals.pv,v48);
while (TAIL!=l7.value){ARGS.push(TAIL.car);
TAIL=TAIL.cdr;
}return (typeof F==='function'?F:F.fvalue).apply(this,ARGS);
})();
return l33.fvalue(internals.pv);
})(v33),'G139');
})();
default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v35) v34=JUMP.label;
 else throw JUMP;
}}return l7.value;
})();
})(l7.value);
}catch (CF){if (CF instanceof internals.BlockNLX&&CF.id==v32) return CF.values;
 else throw CF;
}})();
}catch (v29){v29=internals.js_to_lisp(v29);
return (function(v31){return l16.fvalue(internals.pv,l21.value,l22,v31);
})((function(v30){return v30!==l7.value?v30:v29;
})(internals.js_to_lisp((function(){var TMP=v29[internals.xstring(l20)];
return TMP===undefined?l7.value:TMP;
})())));
}})();
(function(v49){return internals.bindSpecialBindings([l5],[v49],(function(){return internals.js_to_lisp(internals.symbolValue(l5)[internals.xstring(l35)](internals.lisp_to_js(l16.fvalue(internals.pv,l7.value,l34,l15.fvalue(internals.pv,internals.symbolValue(l14))))));
}));
})(internals.symbolValue(l2));
return internals.js_to_lisp(internals.symbolValue(l2)[internals.xstring(l36)]());
}))));
}));
})(internals.symbolValue(l2));
})();
});
FUNC.fname='START-REPL';
return FUNC;
})();
l3;
var l38=internals.intern('NODE-INIT');
var l39=internals.intern('*STANDARD-OUTPUT*','COMMON-LISP');
var l40=internals.intern('WRITE-FN','KEYWORD');
l40.value=l40;
var l41=internals.make_lisp_string('process');
var l42=internals.make_lisp_string('stdout');
var l43=internals.make_lisp_string('write');
var l44=internals.intern('MAKE-STREAM');
var l45=internals.intern('JS-TO-LISP');
var l46=internals.make_lisp_string('process');
var l47=internals.make_lisp_string('argv');
var l48=internals.intern('SUBSEQ','COMMON-LISP');
var l49=internals.intern('VECTOR-TO-LIST');
var l50=internals.intern('MAPCAR','COMMON-LISP');
var l51=internals.intern('NULL','COMMON-LISP');
var l52=internals.intern('LOAD','COMMON-LISP');
l38.fvalue=(function(){var FUNC=(function JSCL_USER_NODEINIT(values){internals.checkArgsAtMost(arguments.length-1,0);
var v50=this;
return (function(){l39.value=l44.fvalue(internals.pv,l40.value,(function JSCL_USER_NIL(values,v52){internals.checkArgs(arguments.length-1,1);
var v53=this;
return internals.js_to_lisp(internals.symbolValue(l5)[internals.xstring(l41)][internals.xstring(l42)][internals.xstring(l43)](internals.lisp_to_js(v52)));
}));
return (function(v54){return l51.fvalue(internals.pv,v54)!==l7.value?l3.fvalue(values):(function(){return (function(v56,v57){(function(){while (v56!==l7.value){v57=internals.car(v56);
l52.fvalue(internals.pv,v57);
l7.value;
v56=internals.cdr(v56);
}return l7.value;
})();
return l7.value;
})(v54,l7.value);
})();
})(l50.fvalue(internals.pv,internals.symbolFunction(l45),l49.fvalue(internals.pv,l48.fvalue(internals.pv,internals.js_to_lisp((function(){var TMP=internals.symbolValue(l5)[internals.xstring(l46)];
if (TMP===undefined) return l7.value;
TMP=TMP[internals.xstring(l47)];
return TMP===undefined?l7.value:TMP;
})()),2))));
})();
});
FUNC.fname='NODE-INIT';
return FUNC;
})();
l38;
l38.fvalue(internals.pv);
})(jscl.internals.pv, jscl.internals);
})( window.jscl )
